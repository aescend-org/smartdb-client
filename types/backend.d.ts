/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/users": {
    /** Get Users */
    get: operations["get_users_users_get"];
    /**
     * New User
     * @description Create a new user in the database
     */
    post: operations["new_user_users_post"];
  };
  "/create-invite-code": {
    /**
     * Create Invide Code
     * @description Create a vector index on the node label and property specified in the node_index_settings.
     */
    post: operations["create_invide_code_create_invite_code_post"];
  };
  "/users/invited": {
    /**
     * New Invited User
     * @description Create a new user in the database
     */
    post: operations["new_invited_user_users_invited_post"];
  };
  "/users/me": {
    /** Read Users Me */
    get: operations["read_users_me_users_me_get"];
  };
  "/users/{username}": {
    /** Get User */
    get: operations["get_user_users__username__get"];
    /**
     * Update User
     * @description Update a user in the database
     */
    put: operations["update_user_users__username__put"];
    /**
     * Delete User
     * @description Delete a user from the database
     */
    delete: operations["delete_user_users__username__delete"];
  };
  "/users/{username}/change-password": {
    /**
     * Set Password
     * @description Set a new password for a user
     */
    post: operations["set_password_users__username__change_password_post"];
  };
  "/login": {
    /**
     * Login User
     * @description Login a user
     */
    post: operations["login_user_login_post"];
  };
  "/token": {
    /** Login For Access Token */
    post: operations["login_for_access_token_token_post"];
  };
  "/models/{model_id}": {
    /** Update Model */
    put: operations["update_model_models__model_id__put"];
    /** Delete Model */
    delete: operations["delete_model_models__model_id__delete"];
  };
  "/models": {
    /** Get Models */
    get: operations["get_models_models_get"];
    /** Add Model */
    post: operations["add_model_models_post"];
  };
  "/stream": {
    /** Message Stream */
    get: operations["message_stream_stream_get"];
  };
  "/stream-fallback": {
    /** Message Stream Fallback */
    get: operations["message_stream_fallback_stream_fallback_get"];
  };
  "/send": {
    /** Send Message */
    post: operations["send_message_send_post"];
  };
  "/suggestions": {
    /** Sugesstions */
    get: operations["sugesstions_suggestions_get"];
  };
  "/chat": {
    /** Chat */
    post: operations["chat_chat_post"];
  };
  "/summarize-conversation": {
    /** Summarize Conversaion */
    post: operations["summarize_conversaion_summarize_conversation_post"];
  };
  "/semantic-search": {
    /** Search */
    get: operations["search_semantic_search_get"];
    /** Semantic Search */
    post: operations["semantic_search_semantic_search_post"];
  };
  "/semantic-image-search": {
    /** Image Search */
    get: operations["image_search_semantic_image_search_get"];
  };
  "/auto-search": {
    /** Auto Search */
    get: operations["auto_search_auto_search_get"];
  };
  "/chinook": {
    /** Get Chinook */
    get: operations["get_chinook_chinook_get"];
  };
  "/vector/documents": {
    /** Get Documents */
    get: operations["get_documents_vector_documents_get"];
  };
  "/vector/documents/{id}": {
    /** Get Document */
    get: operations["get_document_vector_documents__id__get"];
    /** Delete Document */
    delete: operations["delete_document_vector_documents__id__delete"];
    /** Update Document */
    patch: operations["update_document_vector_documents__id__patch"];
  };
  "/vector/documents/{id}/chunks": {
    /** Get Document Chunks */
    get: operations["get_document_chunks_vector_documents__id__chunks_get"];
  };
  "/vector/documents/{id}/references": {
    /** Get Document References */
    get: operations["get_document_references_vector_documents__id__references_get"];
  };
  "/vector/documents/{id}/images": {
    /** Get Document Images */
    get: operations["get_document_images_vector_documents__id__images_get"];
  };
  "/vector/documents/by-title/{title}": {
    /** Get Document By Title */
    get: operations["get_document_by_title_vector_documents_by_title__title__get"];
  };
  "/vector/documents/{id}/summary": {
    /** Get Document Summary */
    get: operations["get_document_summary_vector_documents__id__summary_get"];
    /** Add Document Summary */
    post: operations["add_document_summary_vector_documents__id__summary_post"];
  };
  "/vector/documents/{id}/summary/renew": {
    /** Renew Document Summary */
    post: operations["renew_document_summary_vector_documents__id__summary_renew_post"];
  };
  "/vector/documents/{id}/topics": {
    /** Get Document Topic */
    get: operations["get_document_topic_vector_documents__id__topics_get"];
    /** Add Document Topic */
    post: operations["add_document_topic_vector_documents__id__topics_post"];
    /** Delete Document Topic */
    delete: operations["delete_document_topic_vector_documents__id__topics_delete"];
  };
  "/vector/documents/add/web": {
    /** Add Web Source */
    post: operations["add_web_source_vector_documents_add_web_post"];
  };
  "/vector/documents/dev/image": {
    /** Get Image */
    get: operations["get_image_vector_documents_dev_image_get"];
  };
  "/vector/documents/{id}/index-chunks": {
    /** Index Document Chunks */
    post: operations["index_document_chunks_vector_documents__id__index_chunks_post"];
  };
  "/vector/documents/add/doi": {
    /** Add Pdf Source */
    post: operations["add_pdf_source_vector_documents_add_doi_post"];
  };
  "/vector/documents/by-doi/{doi}": {
    /** Get Document By Doi */
    get: operations["get_document_by_doi_vector_documents_by_doi__doi__get"];
  };
  "/vector/documents/add/pdf": {
    /** Add Simple Pdf */
    post: operations["add_simple_pdf_vector_documents_add_pdf_post"];
  };
  "/access-management/documents/{document_id}/access": {
    /** Get Document Access */
    get: operations["get_document_access_access_management_documents__document_id__access_get"];
  };
  "/access-management/documents/{document_id}/give-access": {
    /** Give User Access To Document */
    post: operations["give_user_access_to_document_access_management_documents__document_id__give_access_post"];
  };
  "/access-management/documents/{document_id}/revoke-access": {
    /** Revoke User Access To Document */
    post: operations["revoke_user_access_to_document_access_management_documents__document_id__revoke_access_post"];
  };
  "/access-management/documents/{document_id}/transfer-ownership": {
    /** Transfer Document Ownership */
    post: operations["transfer_document_ownership_access_management_documents__document_id__transfer_ownership_post"];
  };
  "/access-management/documents/{document_id}/make-public": {
    /** Make Document Public */
    post: operations["make_document_public_access_management_documents__document_id__make_public_post"];
  };
  "/access-management/documents/{document_id}/make-private": {
    /** Make Document Private */
    post: operations["make_document_private_access_management_documents__document_id__make_private_post"];
  };
  "/access-management/projects/{project_id}/access": {
    /** Get Project Access */
    get: operations["get_project_access_access_management_projects__project_id__access_get"];
  };
  "/access-management/projects/{project_id}/give-access": {
    /** Give User Access To Project */
    post: operations["give_user_access_to_project_access_management_projects__project_id__give_access_post"];
  };
  "/access-management/projects/{project_id}/revoke-access": {
    /** Revoke User Access To Project */
    post: operations["revoke_user_access_to_project_access_management_projects__project_id__revoke_access_post"];
  };
  "/access-management/projects/{project_id}/transfer-ownership": {
    /** Transfer Project Ownership */
    post: operations["transfer_project_ownership_access_management_projects__project_id__transfer_ownership_post"];
  };
  "/access-management/projects/{project_id}/partial-access-users": {
    /**
     * Get Users With Partial Access
     * @description Returns a dictionary where keys are usernames who have read access to the project but do not have read access to all documents within the project, and the values are lists of document IDs they do not have access to.
     */
    get: operations["get_users_with_partial_access_access_management_projects__project_id__partial_access_users_get"];
  };
  "/vector/chunks/": {
    /** Get Chunks */
    get: operations["get_chunks_vector_chunks__get"];
  };
  "/vector/chunks/{id}/references": {
    /** Get Chunk References */
    get: operations["get_chunk_references_vector_chunks__id__references_get"];
  };
  "/vector/chunks/{id}": {
    /** Get Chunk */
    get: operations["get_chunk_vector_chunks__id__get"];
    /** Update Chunk */
    put: operations["update_chunk_vector_chunks__id__put"];
    /** Patch Chunk */
    patch: operations["patch_chunk_vector_chunks__id__patch"];
  };
  "/vector/chunks/{id}/document": {
    /** Get Chunk Document */
    get: operations["get_chunk_document_vector_chunks__id__document_get"];
  };
  "/vector/chunks/reference-chunks": {
    /** Reference Chunks */
    post: operations["reference_chunks_vector_chunks_reference_chunks_post"];
  };
  "/vector/chunks/summarieze": {
    /** Summarize Chunk */
    post: operations["summarize_chunk_vector_chunks_summarieze_post"];
  };
  "/vector/sources/": {
    /** Get Sources */
    get: operations["get_sources_vector_sources__get"];
  };
  "/vector/topics": {
    /** Get Topics */
    get: operations["get_topics_vector_topics_get"];
  };
  "/vector/topic-documents": {
    /** Get Topic Documents */
    get: operations["get_topic_documents_vector_topic_documents_get"];
  };
  "/doi/{doi}/metadata": {
    /** Get Metadata */
    get: operations["get_metadata_doi__doi__metadata_get"];
  };
  "/doi/{doi}/bibtex": {
    /** Get Bibtex */
    get: operations["get_bibtex_doi__doi__bibtex_get"];
  };
  "/doi/{doi}/pdf-url": {
    /** Get Pdf Url */
    get: operations["get_pdf_url_doi__doi__pdf_url_get"];
  };
  "/doi/{doi}/pdf": {
    /** Get Pdf */
    get: operations["get_pdf_doi__doi__pdf_get"];
  };
  "/vector/projects": {
    /** Get Projects */
    get: operations["get_projects_vector_projects_get"];
    /** Create Project */
    post: operations["create_project_vector_projects_post"];
  };
  "/vector/projects/{project_id}": {
    /** Get Project */
    get: operations["get_project_vector_projects__project_id__get"];
    /** Update Project */
    put: operations["update_project_vector_projects__project_id__put"];
    /** Delete Project */
    delete: operations["delete_project_vector_projects__project_id__delete"];
  };
  "/vector/projects/{project_id}/documents": {
    /** Get Project Documents */
    get: operations["get_project_documents_vector_projects__project_id__documents_get"];
    /** Add Document */
    post: operations["add_document_vector_projects__project_id__documents_post"];
  };
  "/vector/projects/{project_id}/documents/{document_id}": {
    /** Remove Document */
    delete: operations["remove_document_vector_projects__project_id__documents__document_id__delete"];
  };
  "/vector/projects/{project_id}/grant-access": {
    /** Manage Grants */
    post: operations["manage_grants_vector_projects__project_id__grant_access_post"];
  };
  "/vector/documents/{id}/projects": {
    /** Get Document Projects */
    get: operations["get_document_projects_vector_documents__id__projects_get"];
  };
  "/cite/bibtex": {
    /** Get Bibtex */
    get: operations["get_bibtex_cite_bibtex_get"];
  };
  "/feedback": {
    /**
     * List Feedback
     * @description List all feedbacks
     */
    get: operations["list_feedback_feedback_get"];
    /**
     * Add Feedback
     * @description Add feedback to the system
     */
    post: operations["add_feedback_feedback_post"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Access */
    Access: {
      /** Permissions */
      permissions: ("read" | "write" | "admin")[];
      /** Username */
      username: string;
    };
    /** AccessRequest */
    AccessRequest: {
      /** Username */
      username: string;
      /**
       * Permission
       * @enum {string}
       */
      permission: "read" | "write" | "admin";
    };
    /** AddDocumentToProjectRequest */
    AddDocumentToProjectRequest: {
      /** Document Id */
      document_id: string | number;
    };
    /** AddDocumentTopicRequest */
    AddDocumentTopicRequest: {
      /** Topic */
      topic: string;
    };
    /**
     * Author
     * @enum {string}
     */
    Author: "human" | "ai" | "system";
    /** Body_add_pdf_source_vector_documents_add_doi_post */
    Body_add_pdf_source_vector_documents_add_doi_post: {
      /** Doi */
      doi: string;
      /**
       * Topics
       * @default
       */
      topics?: string;
      /**
       * Sse Id
       * @default
       */
      sse_id?: string;
      /**
       * Include Images
       * @default true
       */
      include_images?: boolean;
    };
    /** Body_add_simple_pdf_vector_documents_add_pdf_post */
    Body_add_simple_pdf_vector_documents_add_pdf_post: {
      /**
       * File
       * Format: binary
       */
      file: string;
      /**
       * Topics
       * @default
       */
      topics?: string;
      /**
       * Sse Id
       * @default
       */
      sse_id?: string;
      /**
       * Include Images
       * @default true
       */
      include_images?: boolean;
      /**
       * Metadata
       * @default {}
       */
      metadata?: string;
    };
    /** Body_login_for_access_token_token_post */
    Body_login_for_access_token_token_post: {
      /** Grant Type */
      grant_type?: string | null;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string | null;
      /** Client Secret */
      client_secret?: string | null;
    };
    /** ChangePassword */
    ChangePassword: {
      /** Old Password */
      old_password: string;
      /** New Password */
      new_password: string;
    };
    /** ChangedUser */
    ChangedUser: {
      /** Username */
      username: string;
      /** Email */
      email: string;
      /** Name */
      name?: string | null;
    };
    /** ChatRequest */
    ChatRequest: {
      /** Query */
      query: string;
      model: components["schemas"]["LLModel"];
      /** Language */
      language?: ("de" | "en") | null;
      /** Include */
      include?: string[] | null;
      /** Exclude */
      exclude?: string[] | null;
      /** Project */
      project?: string | number | null;
      /** Conversation */
      conversation?: components["schemas"]["ConversationMessage"][] | null;
      /**
       * Unsafe
       * @default false
       */
      unsafe?: boolean | null;
    };
    /** Chunk */
    Chunk: {
      /** Id */
      id: number;
      /** Language */
      language: string;
      /** Title */
      title: string;
      /** Text */
      text: string;
      /** Uuid */
      uuid?: string | null;
      /** Source */
      source?: string | null;
      /** References */
      references?: string[] | null;
      /** Reference Section */
      reference_section?: boolean | null;
      /** I */
      i?: number | null;
    };
    /** ChunkReferenceRequest */
    ChunkReferenceRequest: {
      /** Chunk Id */
      chunk_id: number | string;
      /** Ref Chunk Id */
      ref_chunk_id: number | string;
      /** Reference Identifier */
      reference_identifier: string;
      /** Reference Text */
      reference_text: string;
    };
    /** ConversationMessage */
    ConversationMessage: {
      author: components["schemas"]["Author"];
      /** Message */
      message: string;
    };
    /** ConversationRequest */
    ConversationRequest: {
      /** Conversation */
      conversation: components["schemas"]["ConversationMessage"][];
      /** @default llama3.1:8b */
      model?: components["schemas"]["LLModel"];
    };
    /** DocumentResponse */
    DocumentResponse: {
      /** Id */
      id: number;
      /** Title */
      title: string;
      /** Source */
      source?: string | null;
      /** Topics */
      topics?: string[] | null;
      /** Doi */
      doi?: string | null;
      /** Authors */
      authors?: string[] | null;
      /** Owner */
      owner?: string | null;
      /** Public */
      public?: boolean | null;
      /** Url */
      url?: string | null;
      [key: string]: unknown;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** Image */
    Image: {
      /** Id */
      id: number;
      /** Base64 */
      base64: string;
      /** Language */
      language: string;
      /** Title */
      title: string;
      /** Text */
      text: string;
      /** Ocr */
      ocr?: string | null;
      /** Source */
      source?: string | null;
    };
    /** IndexChunkRequest */
    IndexChunkRequest: {
      /** Sse Id */
      sse_id?: string | null;
    };
    /** InvitedUser */
    InvitedUser: {
      /** Username */
      username: string;
      /** Email */
      email: string;
      /** Password */
      password: string;
      /** Name */
      name?: string | null;
      /** Invite Code */
      invite_code: string;
    };
    /**
     * LLModel
     * @enum {string}
     */
    LLModel: "deepseek-r1:7b" | "deepseek-r1:14b" | "command-r7b" | "phi4:14b" | "phi3.5:3.8b" | "phi3:medium-4k" | "phi3:medium-128k" | "llama3.1:8b" | "llama3.2:3b" | "mistral-nemo:12b" | "qwen2.5:14b" | "qwen2.5:7b" | "qwen2.5:3b" | "gemma2:27b" | "gemma2:9b" | "gemma2:2b" | "krtkygpta/gemma2_tools" | "llava:13b";
    /** LLModelDetail */
    LLModelDetail: {
      /** Id */
      id: components["schemas"]["LLModel"] | string;
      /** Family */
      family?: string | null;
      /** Name */
      name?: string | null;
      /** Url */
      url?: string | null;
      /** Description */
      description?: string | null;
      /** Size */
      size?: number | null;
      /** Context Length */
      context_length?: number | null;
      /** License */
      license?: string | null;
      /** Source */
      source?: string | null;
    };
    /** MetaData */
    MetaData: {
      /** Id */
      id: number;
      /** Title */
      title: string;
      /** Source */
      source: string;
      /** Language */
      language: string;
      /** Uuid */
      uuid?: string | null;
      /** Score */
      score?: number | null;
      /** Query */
      query?: string | null;
      /** Index */
      index?: string | null;
      /** Search Type */
      search_type?: string | null;
      /** Context Doc Id */
      context_doc_id?: number | string | null;
      [key: string]: unknown;
    };
    /** ModelId */
    ModelId: {
      /** Model */
      model: string;
    };
    /** NQLResponse */
    NQLResponse: {
      /** Sql */
      sql: string;
      /** Sql Result */
      sql_result: unknown[];
      /** Llm Response */
      llm_response: string;
    };
    /** NewProjectRequest */
    NewProjectRequest: {
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** NewUser */
    NewUser: {
      /** Username */
      username: string;
      /** Email */
      email: string;
      /** Password */
      password: string;
      /** Name */
      name?: string | null;
    };
    /** PostSummaryRequest */
    PostSummaryRequest: {
      /** Text */
      text: string;
    };
    /** ProjectResponse */
    ProjectResponse: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description?: string | null;
      /** Owner */
      owner?: string | null;
    };
    /** Reference */
    Reference: {
      /** Document Id */
      document_id: number;
      /** Text */
      text: string;
      /** Identifier */
      identifier: string;
      /** Chunk Id */
      chunk_id?: number | null;
      /** Ref Chunk Id */
      ref_chunk_id?: number | null;
    };
    /** RetrivelChainContext */
    RetrivelChainContext: {
      /** Page Content */
      page_content: string;
      metadata: components["schemas"]["MetaData"];
      /** Type */
      type?: string | null;
      /** Id */
      id?: number | string | null;
    };
    /** SSEMessage */
    SSEMessage: {
      /** Id */
      id: string;
      /** Message */
      message: string;
      /** Progress */
      progress: number;
      /** Created */
      created: number;
    };
    /**
     * SearchType
     * @description .. deprecated:: 0.3.8 Use ``:class:`~langchain_neo4j.vectorstores.neo4j_vector.SearchType``` instead. It will be removed in None==1.0.
     *
     * Enumerator of the Distance strategies.
     * @enum {string}
     */
    SearchType: "vector" | "hybrid";
    /** SemanticSearchRequest */
    SemanticSearchRequest: {
      /** Query */
      query: string;
      /** Include */
      include?: string[] | null;
      /** Exclude */
      exclude?: string[] | null;
      /** Project */
      project?: string | number | null;
    };
    /** SpecificRetriverOutput */
    SpecificRetriverOutput: {
      /** Input */
      input: string;
      /** Context */
      context: components["schemas"]["RetrivelChainContext"][];
      /** Answer */
      answer: string;
    };
    /** SummariezeChunksRequest */
    SummariezeChunksRequest: {
      /** Ids */
      ids: (number | string)[];
      /** @default llama3.1:8b */
      sum_model?: components["schemas"]["LLModel"];
      /** @default llama3.1:8b */
      trans_model?: components["schemas"]["LLModel"];
    };
    /** Token */
    Token: {
      /** Access Token */
      access_token: string;
      /** Token Type */
      token_type: string;
      /** Expires At */
      expires_at: number;
    };
    /** TopicDocumentResponse */
    TopicDocumentResponse: {
      /** Topic */
      topic: string;
      /** Documents */
      documents: components["schemas"]["DocumentResponse"][];
    };
    /** TopicResponse */
    TopicResponse: {
      /** Name */
      name: string;
    };
    /** TransferOwnership */
    TransferOwnership: {
      /** Username */
      username: string;
    };
    /** User */
    User: {
      /** Id */
      id: number;
      /** Username */
      username: string;
      /** Email */
      email: string;
      /** Disabled */
      disabled: boolean;
      /** Admin */
      admin: boolean;
      /** Name */
      name?: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** WebSourceRequest */
    WebSourceRequest: {
      /** Url */
      url: string;
      /** Topics */
      topics?: string[] | null;
      /** Sse Id */
      sse_id?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get Users */
  get_users_users_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * New User
   * @description Create a new user in the database
   */
  new_user_users_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NewUser"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Create Invide Code
   * @description Create a vector index on the node label and property specified in the node_index_settings.
   */
  create_invide_code_create_invite_code_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * New Invited User
   * @description Create a new user in the database
   */
  new_invited_user_users_invited_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvitedUser"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Read Users Me */
  read_users_me_users_me_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Get User */
  get_user_users__username__get: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Update User
   * @description Update a user in the database
   */
  update_user_users__username__put: {
    parameters: {
      path: {
        username: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChangedUser"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Delete User
   * @description Delete a user from the database
   */
  delete_user_users__username__delete: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Set Password
   * @description Set a new password for a user
   */
  set_password_users__username__change_password_post: {
    parameters: {
      path: {
        username: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChangePassword"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Login User
   * @description Login a user
   */
  login_user_login_post: {
    parameters: {
      query: {
        username: string;
        password: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Login For Access Token */
  login_for_access_token_token_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_token_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Token"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Model */
  update_model_models__model_id__put: {
    parameters: {
      path: {
        model_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LLModelDetail"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Model */
  delete_model_models__model_id__delete: {
    parameters: {
      path: {
        model_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Models */
  get_models_models_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LLModelDetail"][];
        };
      };
    };
  };
  /** Add Model */
  add_model_models_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelId"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Message Stream */
  message_stream_stream_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Message Stream Fallback */
  message_stream_fallback_stream_fallback_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Send Message */
  send_message_send_post: {
    parameters: {
      query: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SSEMessage"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Sugesstions */
  sugesstions_suggestions_get: {
    parameters: {
      query: {
        query: string;
        model?: components["schemas"]["LLModel"];
        n?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Chat */
  chat_chat_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SpecificRetriverOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Summarize Conversaion */
  summarize_conversaion_summarize_conversation_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConversationRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Search */
  search_semantic_search_get: {
    parameters: {
      query: {
        query: string;
        project?: number | string | null;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SearchType"][] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Semantic Search */
  semantic_search_semantic_search_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SemanticSearchRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Image Search */
  image_search_semantic_image_search_get: {
    parameters: {
      query: {
        query: string;
        project?: number | string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Auto Search */
  auto_search_auto_search_get: {
    parameters: {
      query: {
        query: string;
        model?: components["schemas"]["LLModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Chinook */
  get_chinook_chinook_get: {
    parameters: {
      query: {
        query: string;
        model?: components["schemas"]["LLModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["NQLResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Documents */
  get_documents_vector_documents_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DocumentResponse"][];
        };
      };
    };
  };
  /** Get Document */
  get_document_vector_documents__id__get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DocumentResponse"];
        };
      };
      /** @description Document not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Document */
  delete_document_vector_documents__id__delete: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Document */
  update_document_vector_documents__id__patch: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document Chunks */
  get_document_chunks_vector_documents__id__chunks_get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chunk"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document References */
  get_document_references_vector_documents__id__references_get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Reference"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document Images */
  get_document_images_vector_documents__id__images_get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Image"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document By Title */
  get_document_by_title_vector_documents_by_title__title__get: {
    parameters: {
      path: {
        title: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DocumentResponse"];
        };
      };
      /** @description Document not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document Summary */
  get_document_summary_vector_documents__id__summary_get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Document Summary */
  add_document_summary_vector_documents__id__summary_post: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PostSummaryRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Renew Document Summary */
  renew_document_summary_vector_documents__id__summary_renew_post: {
    parameters: {
      query?: {
        sum_model?: components["schemas"]["LLModel"];
        sse_id?: string;
      };
      path: {
        id: number | string;
      };
    };
    requestBody?: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document Topic */
  get_document_topic_vector_documents__id__topics_get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Document Topic */
  add_document_topic_vector_documents__id__topics_post: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddDocumentTopicRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Document Topic */
  delete_document_topic_vector_documents__id__topics_delete: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddDocumentTopicRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Web Source */
  add_web_source_vector_documents_add_web_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["WebSourceRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Image */
  get_image_vector_documents_dev_image_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Index Document Chunks */
  index_document_chunks_vector_documents__id__index_chunks_post: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["IndexChunkRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Pdf Source */
  add_pdf_source_vector_documents_add_doi_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_add_pdf_source_vector_documents_add_doi_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document By Doi */
  get_document_by_doi_vector_documents_by_doi__doi__get: {
    parameters: {
      path: {
        doi: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Simple Pdf */
  add_simple_pdf_vector_documents_add_pdf_post: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_add_simple_pdf_vector_documents_add_pdf_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document Access */
  get_document_access_access_management_documents__document_id__access_get: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Access"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Give User Access To Document */
  give_user_access_to_document_access_management_documents__document_id__give_access_post: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Access granted */
      202: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Revoke User Access To Document */
  revoke_user_access_to_document_access_management_documents__document_id__revoke_access_post: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Access revoked */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Transfer Document Ownership */
  transfer_document_ownership_access_management_documents__document_id__transfer_ownership_post: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TransferOwnership"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Make Document Public */
  make_document_public_access_management_documents__document_id__make_public_post: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Make Document Private */
  make_document_private_access_management_documents__document_id__make_private_post: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Project Access */
  get_project_access_access_management_projects__project_id__access_get: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Access"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Give User Access To Project */
  give_user_access_to_project_access_management_projects__project_id__give_access_post: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Access granted */
      202: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Revoke User Access To Project */
  revoke_user_access_to_project_access_management_projects__project_id__revoke_access_post: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Access revoked */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Transfer Project Ownership */
  transfer_project_ownership_access_management_projects__project_id__transfer_ownership_post: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TransferOwnership"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Users With Partial Access
   * @description Returns a dictionary where keys are usernames who have read access to the project but do not have read access to all documents within the project, and the values are lists of document IDs they do not have access to.
   */
  get_users_with_partial_access_access_management_projects__project_id__partial_access_users_get: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: number[];
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Chunks */
  get_chunks_vector_chunks__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chunk"][];
        };
      };
    };
  };
  /** Get Chunk References */
  get_chunk_references_vector_chunks__id__references_get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Reference"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Chunk */
  get_chunk_vector_chunks__id__get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chunk"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Chunk */
  update_chunk_vector_chunks__id__put: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Chunk"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chunk"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Chunk */
  patch_chunk_vector_chunks__id__patch: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Chunk"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Chunk Document */
  get_chunk_document_vector_chunks__id__document_get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DocumentResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Reference Chunks */
  reference_chunks_vector_chunks_reference_chunks_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChunkReferenceRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Summarize Chunk */
  summarize_chunk_vector_chunks_summarieze_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SummariezeChunksRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Sources */
  get_sources_vector_sources__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string[];
        };
      };
    };
  };
  /** Get Topics */
  get_topics_vector_topics_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TopicResponse"][];
        };
      };
    };
  };
  /** Get Topic Documents */
  get_topic_documents_vector_topic_documents_get: {
    parameters: {
      query?: {
        topic_name?: string | null;
        document_title?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TopicDocumentResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Metadata */
  get_metadata_doi__doi__metadata_get: {
    parameters: {
      query?: {
        retries?: number;
      };
      path: {
        doi: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: string;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
      /** @description DOI not found on external database */
      424: {
        content: never;
      };
    };
  };
  /** Get Bibtex */
  get_bibtex_doi__doi__bibtex_get: {
    parameters: {
      path: {
        doi: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Pdf Url */
  get_pdf_url_doi__doi__pdf_url_get: {
    parameters: {
      path: {
        doi: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description PDF not accessible */
      403: {
        content: never;
      };
      /** @description PDF not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Pdf */
  get_pdf_doi__doi__pdf_get: {
    parameters: {
      path: {
        doi: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Projects */
  get_projects_vector_projects_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ProjectResponse"][];
        };
      };
    };
  };
  /** Create Project */
  create_project_vector_projects_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NewProjectRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Project */
  get_project_vector_projects__project_id__get: {
    parameters: {
      path: {
        project_id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Project */
  update_project_vector_projects__project_id__put: {
    parameters: {
      path: {
        project_id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NewProjectRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Project */
  delete_project_vector_projects__project_id__delete: {
    parameters: {
      path: {
        project_id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Project Documents */
  get_project_documents_vector_projects__project_id__documents_get: {
    parameters: {
      path: {
        project_id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Document */
  add_document_vector_projects__project_id__documents_post: {
    parameters: {
      path: {
        project_id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddDocumentToProjectRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Remove Document */
  remove_document_vector_projects__project_id__documents__document_id__delete: {
    parameters: {
      path: {
        project_id: number | string;
        document_id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Manage Grants */
  manage_grants_vector_projects__project_id__grant_access_post: {
    parameters: {
      path: {
        project_id: number | string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Document Projects */
  get_document_projects_vector_documents__id__projects_get: {
    parameters: {
      path: {
        id: number | string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Bibtex */
  get_bibtex_cite_bibtex_get: {
    parameters: {
      query?: {
        chunks?: string | null;
        documents?: string | null;
        projects?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * List Feedback
   * @description List all feedbacks
   */
  list_feedback_feedback_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /**
   * Add Feedback
   * @description Add feedback to the system
   */
  add_feedback_feedback_post: {
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
